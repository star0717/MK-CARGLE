import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Footer from "../../src/components/layout/Footer";
import Header from "../../src/components/layout/Header";
import { WholeWrapper } from "../../src/components/styles/CommonComponents";
import SignUp from "../../src/components/page/SignUp";
import { useRouter } from "next/dist/client/router";
import { SignRoute } from "../../src/models/router.entity";
import Find from "../../src/components/page/Find";
import FindEmail from "../../src/components/page/FindEmail";

/**
 * sign: url에 따른 컴포넌트
 */
const SignComponent: NextPage = () => {
  const router = useRouter();
  const { action } = router.query;

  switch (action) {
    case SignRoute.SIGNUP:
      return <SignUp />;

    case SignRoute.FIND:
      return <Find />;

    case SignRoute.FINDEMAIL:
      return <FindEmail />;
  }
};

const SignUpPage: NextPage = () => {
  return (
    <>
      <Head>
        <title>MK SOLUTION</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <WholeWrapper minHeight={`100vh`} ju={`space-between`}>
        <Header />
        <SignComponent />
        <Footer />
      </WholeWrapper>
    </>
  );
};

export default SignUpPage;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const route = context.query;
  const signRoute = route.action ? route.action : null;
  const signItem: any = Object.values(SignRoute); // page first query array

  if (context.req.cookies.mk_token) {
    return {
      redirect: {
        permanent: false,
        destination: "/v/main",
      },
    };
  } else {
    if (signItem.indexOf(signRoute) === -1) {
      return {
        notFound: true,
      };
    } else {
      return {
        props: {},
      };
    }
  }
};
