{
  "dependencies": {
    "@nestjs/mapped-types": "*",
    "cross-var": "^1.1.0",
    "dotenv-cli": "^5.1.0",
    "dotenv-replace": "^0.0.2"
  },
  "name": "n2server",
  "description": "Next.js + Nestjs 기반의 통합서버",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "ctx:create": "docker context create ecs ecs --profile default",
    "ctx:ls": "docker context ls",
    "ctx:ecs": "docker context use ecs",
    "ctx:default": "docker context use default",
    "build": "docker-compose build",
    "push": "docker-compose push",
    "local:up": "docker-compose up",
    "local:up:d": "docker-compose up -d",
    "local:down": "docker-compose down",
    "local:logs": "docker-compose logs -f",
    "local:ps": "docker-compose ps",
    "local:image:prune": "npm run ctx:default && docker images -a && docker image prune && npm run ctx:ecs",
    "ecr:login": "dotenv cross-var %ecs_login_cmd%",
    "ecs:local:up": "ecs-cli local up",
    "ecs:local:down": "ecs-cli local down",
    "ecs:local:ps": "ecs-cli local ps",
    "node:ls": "docker node ls",
    "node:ps": "docker node ps",
    "stack:deploy": "docker stack deploy --compose-file compose.swarm.yml --orchestrator swarm n2server",
    "stack:services": "docker stack services n2server",
    "stack:rm": "docker stack rm n2server",
    "df": "df -h .",
    "docker:build:front-end": "sudo docker build -t localhost:5000/front-end ./front-end",
    "docker:build:back-end": "sudo docker build -t localhost:5000/back-end ./back-end",
    "docker:build:proxy-server": "sudo docker build -t localhost:5000/proxy-server ./proxy-server",
    "docker:build": "npm run docker:build:front-end & npm run docker:build:back-end & npm run docker:build:proxy-server",
    "service:create:front-end": "docker service create --mode global --name front-end -p 3000:3000 localhost:5000/front-end",
    "service:create:back-end": "docker service create --mode global --name back-end -p 7001:7001 localhost:5000/back-end",
    "service:create:proxy-server": "docker service create --mode global --name proxy-server -p 80 localhost:5000/proxy-server",
    "service:rm:front-end": "docker service rm front-end",
    "service:rm:back-end": "docker service rm back-end",
    "service:rm:proxy-server": "docker service rm proxy-server",
    "n2:build": "docker build -t n2server .",
    "n2:run": "docker run -d -p 80:80 --name n2server n2server",
    "n2:stop": "docker stop n2server",
    "n2:rm": "docker rm n2server",
    "n2:exec": "docker exec -it n2server /bin/sh",
    "n2:logs": "docker logs -n 100 -f n2server",
    "n2:rebuild": "npm run n2:stop && npm run n2:rm && npm run n2:build",
    "n2:rerun": "npm run n2:rebuild && npm run n2:run",
    "n2:reexec": "npm run n2:rerun && npm run n2:exec"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ByunMooYoung/n2server.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ByunMooYoung/n2server/issues"
  },
  "homepage": "https://github.com/ByunMooYoung/n2server#readme"
}
